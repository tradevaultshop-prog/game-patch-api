{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset238 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil\fcharset1 Segoe UI Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang1033 ## **Game Patch Notes Intelligence API (GPNAI) - Kullan\u305?c\u305? El Kitab\u305?**\par
\par
**S\f1\'fcr\'fcm:** 3.0 (Faz 3 Entegrasyonu Tamamlanm\f0\u305?\'ba)\par
**Tarih:** 25 Ekim 2025\par
\par
**\u304?\f1\'e7indekiler:**\par
\par
1.  Giri\f0\'ba: GPNAI Nedir ve Hangi Sorunu \f1\'c7\'f6zer?\par
2.  Sistem Mimarisi: B\'fcy\'fck Resim\par
3.  Klas\'f6r ve Dosya Yap\f0\u305?s\u305? A\u287?ac\u305?\par
4.  Bile\'baenlerin Detayl\u305? A\f1\'e7\f0\u305?klamas\u305? (Dosyalar ve G\f1\'f6revleri)\par
5.  Platform Entegrasyonlar\f0\u305? (GitHub, Render, Gemini, Cloudflare, Slack)\par
6.  Veri Ak\u305?\'ba\u305?: Girdiden \f1\'c7\f0\u305?kt\u305?ya Yolculuk\par
7.  \f1\'c7\f0\u305?kt\u305? Verisi: JSON Format\u305? ve Yorumlanmas\u305?\par
8.  Sistem Kullan\u305?m\u305? (Sahip ve M\f1\'fc\f0\'bateri Perspektifi)\par
9.  Bak\u305?m ve Sorun Giderme\par
10. Gelecek Vizyonu ve Potansiyel Geli\'batirmeler\par
\par
-----\par
\par
### **1. Giri\'ba: GPNAI Nedir ve Hangi Sorunu \f1\'c7\'f6zer?**\par
\par
Game Patch Notes Intelligence API (GPNAI), \'e7e\f0\'baitli oyun geli\'batiricileri taraf\u305?ndan d\f1\'fczensiz formatlarda yay\f0\u305?nlanan **yama notu metinlerini** otomatik olarak analiz eden, \f1\'f6nemli de\f0\u287?i\'baiklikleri (dengeleme, yeni i\f1\'e7erik vb.) ay\f0\u305?rt eden ve bu bilgileri **standartla\'bat\u305?r\u305?lm\u305?\'ba, makine taraf\u305?ndan okunabilir JSON format\u305?nda** sunan bulut tabanl\u305? bir API hizmetidir.\par
\par
**Temel Sorun:** Oyun d\f1\'fcnyas\f0\u305?nda (e-spor, i\f1\'e7erik \'fcretimi, haber siteleri) yama notlar\f0\u305?n\u305? takip etmek kritik \f1\'f6neme sahiptir. Ancak bu notlar genellikle yap\f0\u305?land\u305?r\u305?lmam\u305?\'ba metinlerdir ve her oyun i\f1\'e7in farkl\f0\u305? formatta yay\u305?nlan\u305?r. Bu bilgileri manuel olarak i\'balemek; zaman al\u305?c\u305?, maliyetli ve hataya a\f1\'e7\f0\u305?kt\u305?r.\par
\par
**GPNAI'nin \f1\'c7\'f6z\'fcm\'fc:** GPNAI, bu s\'fcreci **tamamen otomatize eder**. Veriyi \'e7eker, yapay zeka (Google Gemini) ile analiz eder, standart bir JSON format\f0\u305?na d\f1\'f6n\'fc\f0\'bat\f1\'fcr\'fcr ve g\'fcvenilir bir API arac\f0\u305?l\u305?\u287?\u305?yla sunar. Bu sayede kullan\u305?c\u305?lar, manuel \f1\'e7aba harcamadan en g\'fcncel meta verilerine an\f0\u305?nda eri\'baebilirler.\par
\par
-----\par
\par
### **2. Sistem Mimarisi: B\f1\'fcy\'fck Resim**\par
\par
GPNAI, modern bulut platformlar\f0\u305?n\u305?n (PaaS) prensiplerine uygun olarak **"Stateless" (Durumsuz)** bir mimari \f1\'fczerine kurulmu\f0\'batur. Bu, sistemin her bir par\f1\'e7as\f0\u305?n\u305?n (API sunucusu, veri i\'baleyici) birbirinden ba\u287?\u305?ms\u305?z \f1\'e7al\f0\u305?\'bat\u305?\u287?\u305? ve veriyi payla\'ba\u305?lan, harici bir depolama alan\u305?nda (Cloudflare R2) saklad\u305?\u287?\u305? anlam\u305?na gelir.\par
\par
**Ana Bile\'baenler:**\par
\par
  * **Veri \u304?\'baleyici (`patch-scraper` & `patch-health-check`):** Render \f1\'fczerinde \'e7al\f0\u305?\'baan iki ayr\u305? `Cron Job` (Zamanlanm\u305?\'ba G\f1\'f6rev). `scrape.py` beti\f0\u287?ini farkl\u305? modlarda \f1\'e7al\f0\u305?\'bat\u305?r\u305?rlar.\par
      * `patch-scraper`: Belirlenen aral\u305?klarla (\f1\'f6rn: 4 saatte bir) oyun verilerini \'e7eker, analiz eder ve sonucu Cloudflare R2'ye yazar.\par
      * `patch-health-check`: Daha seyrek (\'f6rn: g\'fcnde bir kez) \'e7al\f0\u305?\'baarak veri kaynaklar\u305?n\u305?n (web siteleri) yap\u305?s\u305?n\u305?n bozulup bozulmad\u305?\u287?\u305?n\u305? kontrol eder ve Slack'e uyar\u305? g\f1\'f6nderir.\par
  * **API Sunucusu (`game-patch-api`):** Render \'fczerinde \'e7al\f0\u305?\'baan bir `Web Servisi`. FastAPI ile yaz\u305?lm\u305?\'bat\u305?r. M\f1\'fc\f0\'baterilerden gelen API isteklerini al\u305?r, Cloudflare R2'den ilgili veriyi okur ve JSON olarak yan\u305?tlar.\par
  * **Yapay Zeka (Google Gemini):** Veri \u304?\'baleyici taraf\u305?ndan \f1\'e7a\f0\u287?r\u305?lan harici bir servis. Ham metni analiz edip yap\u305?land\u305?r\u305?lm\u305?\'ba JSON'a d\f1\'f6n\'fc\f0\'bat\f1\'fcr\'fcr.\par
  * **Depolama (Cloudflare R2):** Analiz edilmi\f0\'ba JSON verilerinin (`_latest.json`) ve veri b\f1\'fct\'fcnl\'fc\f0\u287?\f1\'fcn\'fc kontrol eden hash de\f0\u287?erlerinin (`_latest.hash`) sakland\u305?\u287?\u305? S3 uyumlu harici depolama alan\u305?.\par
  * **Bildirim (Slack):** Sistemde kritik bir hata olu\'batu\u287?unda (\f1\'f6rn: analiz ba\f0\'baar\u305?s\u305?z, scraper bozuldu) an\u305?nda bildirim g\f1\'f6nderilen platform.\par
\par
-----\par
\par
### **3. Klas\'f6r ve Dosya Yap\f0\u305?s\u305? A\u287?ac\u305?**\par
\par
Projenin temel yap\u305?s\u305? a\'baa\u287?\u305?daki gibidir:\par
\par
```\par
/game-patch-api\par
\f2\u9474?\f1\par
\f2\u9500?\u9472?\u9472?\f1  .github/          # GitHub Actions vb. i\'e7in (\f0\'bau an bo\'ba olabilir)\par
\f2\u9500?\u9472?\u9472?\f1  venv/             # Yerel Python sanal ortam\f0\u305? (Git'e g\f1\'f6nderilmez)\par
\f2\u9474?\f1\par
\f2\u9500?\u9472?\u9472?\f1  main.py           # FastAPI Web API Sunucusu\par
\f2\u9500?\u9472?\u9472?\f1  scrape.py         # Ana Veri \f0\u304?\'baleyici Motoru (Cron Job'lar taraf\u305?ndan \f1\'e7al\f0\u305?\'bat\u305?r\u305?l\u305?r)\par
\f2\u9500?\u9472?\u9472?\f1  utils.py          # Gemini AI ile ileti\f0\'baim ve analiz mant\u305?\u287?\u305?\par
\f2\u9500?\u9472?\u9472?\f1  scrapers.py       # Her oyun i\'e7in \'f6zel veri \'e7ekme (scraping) fonksiyonlar\f0\u305?\par
\f2\u9474?\f1\par
\f2\u9500?\u9472?\u9472?\f1  sources.yaml      # Oyunlar\f0\u305?n ve veri kaynaklar\u305?n\u305?n yap\u305?land\u305?rma dosyas\u305?\par
\f2\u9500?\u9472?\u9472?\f1  render.yaml       # Render.com i\'e7in altyap\f0\u305? ve da\u287?\u305?t\u305?m plan\u305?\par
\f2\u9500?\u9472?\u9472?\f1  requirements.txt  # Projenin Python ba\f0\u287?\u305?ml\u305?l\u305?klar\u305? listesi\par
\f2\u9474?\f1\par
\f2\u9500?\u9472?\u9472?\f1  .env              # Yerel geli\f0\'batirme i\f1\'e7in gizli anahtarlar (Git'e g\'f6nderilmez)\par
\f2\u9500?\u9472?\u9472?\f1  .gitignore        # Git taraf\f0\u305?ndan takip edilmeyecek dosya/klas\f1\'f6rler\par
\f2\u9474?\f1\par
\f2\u9492?\u9472?\u9472?\f1  scraper.log       # Yerel testler s\f0\u305?ras\u305?nda olu\'baturulan log dosyas\u305? (Git'e g\f1\'f6nderilmez)\par
```\par
\par
-----\par
\par
### **4. Bile\f0\'baenlerin Detayl\u305? A\f1\'e7\f0\u305?klamas\u305? (Dosyalar ve G\f1\'f6revleri)**\par
\par
  * **`main.py`**:\par
\par
      * **Teknoloji:** FastAPI, Boto3, functools (lru\\_cache).\par
      * **G\'f6rev:** M\'fc\f0\'bateriye d\f1\'f6n\'fck API sunucusudur. D\f0\u305?\'ba d\f1\'fcnyadan gelen istekleri kar\f0\'ba\u305?lar.\par
      * **\u304?\'baleyi\'ba:**\par
          * `/` endpoint'i: Temel API bilgisi d\f1\'f6nd\'fcr\'fcr.\par
          * `/health` endpoint'i: Sistemin "canl\f0\u305?" olup olmad\u305?\u287?\u305?n\u305? kontrol etmek i\f1\'e7in basit bir yan\f0\u305?t verir (\f1\'d6neri 4.2).\par
          * `/patches` endpoint'i:\par
              * Gelen iste\f0\u287?in `X-API-Key` ba\'bal\u305?\u287?\u305?n\u305? `API_KEY` ortam de\u287?i\'bakeniyle do\u287?rular (\f1\'d6neri 3.2).\par
              * `game` parametresini al\f0\u305?r. Eksikse 400 hatas\u305? verir.\par
              * Oyun ad\u305?na g\f1\'f6re R2'deki dosya ad\f0\u305?n\u305? (`oyunad\u305?_latest.json`) belirler.\par
              * `fetch_from_s3` fonksiyonunu \f1\'e7a\f0\u287?\u305?r\u305?r. Bu fonksiyon, `lru_cache` sayesinde sonucu haf\u305?zada (cache) tutarak R2'ye giden istekleri azalt\u305?r (\f1\'d6neri 3.3).\par
              * `fetch_from_s3`, `boto3` kullanarak R2'den dosyay\f0\u305? okur. Dosya yoksa `None` d\f1\'f6nd\'fcr\'fcr.\par
              * Sonu\'e7 `None` ise 404 hatas\f0\u305? verir. Veri varsa JSON olarak m\f1\'fc\f0\'bateriye d\f1\'f6nd\'fcr\'fcr.\par
\par
  * **`scrape.py`**:\par
\par
      * **Teknoloji:** Python, YAML, Requests, Boto3, concurrent.futures, hashlib, sys.\par
      * **G\'f6rev:** Arka planda \'e7al\f0\u305?\'baan ana veri i\'baleme motorudur. Render'daki Cron Job'lar taraf\u305?ndan `--run=scrape` veya `--run=health` arg\f1\'fcmanlar\f0\u305?yla \f1\'e7al\f0\u305?\'bat\u305?r\u305?l\u305?r.\par
      * **\u304?\'baleyi\'ba (`--run=scrape` modu):**\par
        1.  `sources.yaml` dosyas\u305?n\u305? okur.\par
        2.  `ThreadPoolExecutor` kullanarak `scrapers.py` i\f1\'e7indeki t\'fcm oyunlar\f0\u305?n `fetch_*` fonksiyonlar\u305?n\u305? **paralel** olarak \f1\'e7al\f0\u305?\'bat\u305?r\u305?r (\f1\'d6neri 2.4).\par
        3.  Her bir \'e7ekilen ham verinin `sha256` hash'ini hesaplar.\par
        4.  `get_hash_from_s3` ile R2'deki son kaydedilen hash'i okur.\par
        5.  Hash'ler ayn\f0\u305?ysa, o oyunu atlar (`SKIPPED`) (\f1\'d6neri 1.3).\par
        6.  Hash farkl\f0\u305?ysa veya ilk kez \f1\'e7al\f0\u305?\'ba\u305?yorsa, ham veriyi `utils.py`'deki `analyze_with_gemini`'ye **s\u305?rayla** (API limitini korumak i\f1\'e7in aralarda bekleme yaparak) g\'f6nderir.\par
        7.  Ba\f0\'baar\u305?l\u305? analiz sonucu (`result`) gelirse, `save_json_to_s3` ile JSON'u R2'ye (`_latest.json`), `save_hash_to_s3` ile de yeni hash'i R2'ye (`_latest.hash`) kaydeder.\par
        8.  Herhangi bir kritik hata (API hatas\u305?, S3 hatas\u305?) olursa `send_alert` ile Slack'e bildirim g\f1\'f6nderir (\'d6neri 4.1).\par
      * **\f0\u304?\'baleyi\'ba (`--run=health` modu):**\par
        1.  `sources.yaml` dosyas\u305?n\u305? okur.\par
        2.  `scrapers.py` i\f1\'e7indeki her `fetch_*` fonksiyonunu \'e7al\f0\u305?\'bat\u305?r\u305?r.\par
        3.  E\u287?er bir fonksiyon `None` d\f1\'f6nd\'fcr\'fcrse (veri \'e7ekemezse), bunun bir scraper bozulmas\f0\u305? olabilece\u287?ini varsayar.\par
        4.  Bozuk oldu\u287?u d\f1\'fc\f0\'ba\f1\'fcn\'fclen scraper'lar\f0\u305?n listesini `send_alert` ile Slack'e g\f1\'f6nderir (\'d6neri 1.1).\par
\par
  * **`utils.py`**:\par
\par
      * **Teknoloji:** Google GenAI K\'fct\'fcphanesi.\par
      * **G\'f6rev:** Gemini AI ile ileti\f0\'baimi y\f1\'f6netir.\par
      * **\f0\u304?\'baleyi\'ba:** `analyze_with_gemini` fonksiyonu:\par
          * `GEMINI_API_KEY` ortam de\u287?i\'bakenini okur.\par
          * Verilen ham metin ve oyun ad\u305? ile prompt'u olu\'baturur (JSON format\u305? ve \f1\'f6nemli de\f0\u287?i\'baiklikleri \f1\'e7\f0\u305?karma talimat\u305? i\f1\'e7erir).\par
          * Gemini API'ye iste\f0\u287?i g\f1\'f6nderir (`response_mime_type="application/json"` zorlamas\f0\u305?yla).\par
          * Gelen yan\u305?t\u305? `json.loads` ile ayr\u305?\'bat\u305?rmaya \f1\'e7al\f0\u305?\'ba\u305?r. Ba\'baar\u305?s\u305?z olursa veya API hatas\u305? al\u305?rsa, hatay\u305? loglar, `send_alert` ile Slack'e bildirir ve `None` d\f1\'f6nd\'fcr\'fcr.\par
\par
  * **`scrapers.py`**:\par
\par
      * **Teknoloji:** Requests, BeautifulSoup4, lxml.\par
      * **G\'f6rev:** Her bir oyun i\'e7in spesifik veri \'e7ekme mant\f0\u305?\u287?\u305?n\u305? i\f1\'e7erir.\par
      * **\f0\u304?\'baleyi\'ba:** Her `fetch_*` fonksiyonu, `scrape.py`'den gelen `session` objesini kullanarak ilgili web sitesine veya RSS ak\u305?\'ba\u305?na istek atar, HTML/XML'i ayr\u305?\'bat\u305?r\u305?r (`html.parser` veya `lxml-xml`), ilgili metin i\f1\'e7eri\f0\u287?ini bulur, temizler ve string olarak d\f1\'f6nd\'fcr\'fcr. Hata durumunda `None` d\'f6nd\'fcr\'fcr.\par
\par
  * **`sources.yaml`**:\par
\par
      * **Teknoloji:** YAML.\par
      * **G\'f6rev:** Desteklenen oyunlar\f0\u305? ve bunlara kar\'ba\u305?l\u305?k gelen `scrapers.py` fonksiyon adlar\u305?n\u305? listeler. Yeni oyun eklemeyi kolayla\'bat\u305?r\u305?r (\f1\'d6neri 1.2).\par
      * **\f0\u304?\'baleyi\'ba:** `scrape.py` taraf\u305?ndan okunarak hangi oyunlar\u305?n i\'balenece\u287?ini ve hangi fonksiyonlar\u305?n \f1\'e7a\f0\u287?r\u305?laca\u287?\u305?n\u305? belirler.\par
\par
  * **`render.yaml`**:\par
\par
      * **Teknoloji:** YAML (Render Blueprint format\u305?).\par
      * **G\f1\'f6rev:** Render.com i\'e7in altyap\f0\u305? tan\u305?m\u305?d\u305?r. \f1\'dc\'e7 servisi (`web`, `cron`, `cron`) ve bunlar\f0\u305?n yap\u305?land\u305?rmalar\u305?n\u305? (build komutu, start komutu, zamanlama, ortam de\u287?i\'bakenleri) tan\u305?mlar.\par
      * **\u304?\'baleyi\'ba:** Render, GitHub'a push yap\u305?ld\u305?\u287?\u305?nda bu dosyay\u305? okur ve altyap\u305?y\u305? buna g\f1\'f6re g\'fcnceller.\par
\par
  * **`requirements.txt`**:\par
\par
      * **G\'f6rev:** Projenin \'e7al\f0\u305?\'bamas\u305? i\f1\'e7in gereken t\'fcm Python k\'fct\'fcphanelerini listeler. Render `buildCommand: pip install -r requirements.txt` komutuyla bu k\'fct\'fcphaneleri otomatik olarak kurar.\par
\par
  * **`.env`**:\par
\par
      * **G\'f6rev:** Yerel makinede geli\f0\'batirme yaparken kullan\u305?lan gizli anahtarlar\u305? (API Key, S3 credentials, Slack URL, Gemini Key) i\f1\'e7erir. **Asla GitHub'a g\'f6nderilmemelidir.**\par
\par
  * **`.gitignore`**:\par
\par
      * **G\'f6rev:** Git'in hangi dosya ve klas\'f6rleri (\'f6rn: `venv/`, `__pycache__/`, `.env`, `scraper.log`) takip etmemesi gerekti\f0\u287?ini belirtir.\par
\par
  * **`scraper.log`**:\par
\par
      * **G\f1\'f6rev:** `scrape.py` beti\f0\u287?i yerel makinede \f1\'e7al\f0\u305?\'bat\u305?r\u305?ld\u305?\u287?\u305?nda loglar\u305?n yaz\u305?ld\u305?\u287?\u305? dosyad\u305?r. Render \f1\'fczerindeki loglar i\'e7in Render'\f0\u305?n kendi aray\f1\'fcz\'fc kullan\f0\u305?l\u305?r.\par
\par
-----\par
\par
### **5. Platform Entegrasyonlar\u305?**\par
\par
Sistem, i\'balevselli\u287?ini sa\u287?lamak i\f1\'e7in a\f0\'baa\u287?\u305?daki harici platformlarla entegre \f1\'e7al\f0\u305?\'ba\u305?r:\par
\par
  * **GitHub (`github.com/tradevaultshop-prog/game-patch-api`)**:\par
\par
      * **Rol:** Kaynak Kod Y\f1\'f6netimi.\par
      * **Entegrasyon:** Projenin t\'fcm kodu burada bar\f0\u305?nd\u305?r\u305?l\u305?r. Render'a "Blueprint" olarak ba\u287?lanm\u305?\'bat\u305?r. `main` dal\u305?na yap\u305?lan her `push` i\'balemi, Render'da otomatik da\u287?\u305?t\u305?m\u305? tetikler.\par
      * **Ayarlar:** Render entegrasyonu i\f1\'e7in GitHub hesab\f0\u305?n\u305?zdan Render uygulamas\u305?na izin vermeniz gerekir.\par
\par
  * **Render (`dashboard.render.com`)**:\par
\par
      * **Rol:** Uygulama Bar\u305?nd\u305?rma (PaaS).\par
      * **Entegrasyon:** `render.yaml` dosyas\u305?n\u305? okuyarak altyap\u305?y\u305? (1 Web Servisi, 2 Cron Job) olu\'baturur ve y\f1\'f6netir. GitHub'dan kodu \'e7eker, `requirements.txt` ile ba\f0\u287?\u305?ml\u305?l\u305?klar\u305? kurar ve `startCommand`'lar\u305? \f1\'e7al\f0\u305?\'bat\u305?r\u305?r.\par
      * **Ayarlar:**\par
          * "Blueprint" servisi GitHub deposuna ba\u287?lan\u305?r (Dal: `main`).\par
          * Her \f1\'fc\'e7 servis (`game-patch-api`, `patch-scraper`, `patch-health-check`) i\'e7in "Environment" (Ortam De\f0\u287?i\'bakenleri) b\f1\'f6l\'fcm\'fcne gerekli API anahtarlar\f0\u305? ve gizli bilgiler (GEMINI\\_API\\_KEY, S3\\_\\*, API\\_KEY, SLACK\\_WEBHOOK\\_URL) eklenir.\par
\par
  * **Google AI Studio (`aistudio.google.com/api-keys`)**:\par
\par
      * **Rol:** Yapay Zeka Analizi.\par
      * **Entegrasyon:** `utils.py` dosyas\u305?, `google-genai` k\f1\'fct\'fcphanesi arac\f0\u305?l\u305?\u287?\u305?yla bu platformun API'sini kullan\u305?r.\par
      * **Ayarlar:** Platformdan bir `API Anahtar\u305?` (`GEMINI_API_KEY`) al\u305?n\u305?r ve bu anahtar Render'daki ilgili servislere (`patch-scraper`, `patch-health-check`) ortam de\u287?i\'bakeni olarak eklenir. (API limitlerine tak\u305?lmamak i\f1\'e7in faturaland\f0\u305?rman\u305?n etkinle\'batirilmesi \f1\'f6nerilir).\par
\par
  * **Cloudflare (`dash.cloudflare.com`)**:\par
\par
      * **Rol:** Harici Dosya Depolama (R2).\par
      * **Entegrasyon:** `scrape.py` (`boto3` ile) analiz edilmi\f0\'ba JSON ve hash dosyalar\u305?n\u305? R2'ye yazar. `main.py` (`boto3` ile) bu dosyalar\u305? R2'den okur.\par
      * **Ayarlar:**\par
          * `game-patch-data` ad\u305?nda bir R2 Bucket olu\'baturulur.\par
          * Bu bucket i\f1\'e7in "Object Read & Write" izinli bir R2 API Token olu\f0\'baturulur. Token'\u305?n `Access Key ID` ve `Secret Access Key` de\u287?erleri al\u305?n\u305?r.\par
          * Bucket'\u305?n `S3 API Endpoint URL`'si kopyalan\u305?r.\par
          * Bu 4 bilgi (`S3_BUCKET_NAME`, `S3_ENDPOINT_URL`, `S3_ACCESS_KEY_ID`, `S3_SECRET_ACCESS_KEY`) Render'daki ilgili servislere (`game-patch-api`, `patch-scraper`, `patch-health-check`) ortam de\u287?i\'bakeni olarak eklenir.\par
          * Bucket ayarlar\u305?ndan "Object Versioning" (Nesne S\f1\'fcr\'fcmleme) \'f6zelli\f0\u287?inin etkinle\'batirilmesi \f1\'f6nerilir (Faz 3).\par
\par
  * **Slack (`hooks.slack.com/services/...`)**:\par
\par
      * **Rol:** Anl\f0\u305?k Hata Bildirimi.\par
      * **Entegrasyon:** `scrape.py` dosyas\u305?, kritik hatalar olu\'batu\u287?unda `send_alert` fonksiyonu arac\u305?l\u305?\u287?\u305?yla bu platforma bir mesaj g\f1\'f6nderir.\par
      * **Ayarlar:** Belirli bir Slack kanal\f0\u305? i\f1\'e7in "Incoming Webhook URL" olu\f0\'baturulur ve bu URL, Render'daki ilgili servislere (`patch-scraper`, `patch-health-check`) `SLACK_WEBHOOK_URL` ortam de\u287?i\'bakeni olarak eklenir.\par
\par
-----\par
\par
### **6. Veri Ak\u305?\'ba\u305?: Girdiden \f1\'c7\f0\u305?kt\u305?ya Yolculuk**\par
\par
1.  **Girdi:** Oyunlar\u305?n web sitelerinden/RSS ak\u305?\'balar\u305?ndan al\u305?nan ham, yap\u305?land\u305?r\u305?lmam\u305?\'ba **HTML** veya **XML** metni.\par
2.  **Temizleme:** Metin, HTML/XML etiketlerinden ar\u305?nd\u305?r\u305?l\u305?r ve k\u305?salt\u305?l\u305?r.\par
3.  **Hash Kontrol\f1\'fc:** Temiz metnin hash'i hesaplan\f0\u305?r ve R2'deki son hash ile kar\'ba\u305?la\'bat\u305?r\u305?l\u305?r. De\u287?i\'baiklik yoksa i\'balem durur.\par
4.  **Yapay Zeka Analizi:** De\u287?i\'baiklik varsa, temiz metin Google Gemini'ye g\f1\'f6nderilir.\par
5.  **Yap\f0\u305?land\u305?rma:** Gemini, metni analiz eder ve prompt'taki talimatlara g\f1\'f6re \'f6nemli de\f0\u287?i\'baiklikleri i\f1\'e7eren bir **JSON objesi** d\'f6nd\'fcr\'fcr.\par
6.  **Harici Depolama:** Bu JSON objesi R2'ye `_latest.json` olarak, yeni hash de\f0\u287?eri de `_latest.hash` olarak kaydedilir.\par
7.  **API Sunumu:** M\f1\'fc\f0\'bateri API'ye istek att\u305?\u287?\u305?nda, `main.py` R2'den ilgili `_latest.json` dosyas\u305?n\u305? okur.\par
8.  **\f1\'c7\f0\u305?kt\u305?:** Okunan **JSON verisi** m\f1\'fc\f0\'bateriye yan\u305?t olarak d\f1\'f6nd\'fcr\'fcl\'fcr.\par
\par
-----\par
\par
### **7. \'c7\f0\u305?kt\u305? Verisi: JSON Format\u305? ve Yorumlanmas\u305?**\par
\par
API'nin `/patches` endpoint'inden d\f1\'f6nen temel JSON yap\f0\u305?s\u305? \'ba\f1\'f6yledir:\par
\par
```json\par
\{\par
  "game": "Oyun Ad\f0\u305?",\par
  "patch_version": "Tespit Edilen Versiyon veya 'unknown'",\par
  "date": "Tespit Edilen Tarih veya 'unknown'",\par
  "changes": [\par
    \{\par
      "type": "nerf | buff | new | fix",\par
      "target": "Etkilenen \f1\'d6\f0\u287?e (\f1\'f6rn: Karakter, Silah)",\par
      "ability": "Etkilenen Yetenek (varsa)",\par
      "details": "De\f0\u287?i\'baikli\u287?in A\f1\'e7\f0\u305?klamas\u305?"\par
    \},\par
    // ... ba\'baka de\u287?i\'baiklikler ...\par
  ]\par
\}\par
```\par
\par
  * **`game`, `patch_version`, `date`:** Yama notu hakk\u305?ndaki temel meta verilerdir. AI bunlar\u305? metinden \f1\'e7\f0\u305?karamazsa "unknown" d\f1\'f6ner.\par
  * **`changes`:** En \'f6nemli k\f0\u305?s\u305?md\u305?r. Bir dizi (array) olarak o yamadaki \f1\'f6nemli de\f0\u287?i\'baiklikleri listeler.\par
      * `type`: De\u287?i\'baikli\u287?in kategorisini belirtir.\par
      * `target`, `ability`: De\u287?i\'baikli\u287?in neyi etkiledi\u287?ini belirtir.\par
      * `details`: AI taraf\u305?ndan olu\'baturulan, de\u287?i\'baikli\u287?in \f1\'f6zet a\'e7\f0\u305?klamas\u305?d\u305?r.\par
  * **\f1\'d6nemli Not - `changes: []`:** E\f0\u287?er `changes` dizisi bo\'ba gelirse, bu bir hata de\u287?ildir. Sistem veriyi \f1\'e7ekmi\f0\'ba, analiz etmi\'ba ancak prompt'taki kriterlere uyan (nerf, buff, new, fix) raporlanacak \f1\'f6nemli bir de\f0\u287?i\'baiklik bulamam\u305?\'bat\u305?r.\par
\par
-----\par
\par
### **8. Sistem Kullan\u305?m\u305? (Sahip ve M\f1\'fc\f0\'bateri Perspektifi)**\par
\par
  * **Sistem Sahibi (Y\f1\'f6netici) Olarak:**\par
\par
      * **Kurulum:** Sistemi kurmak i\'e7in bu k\f0\u305?lavuzdaki ad\u305?mlar\u305? (platform hesaplar\u305? olu\'baturma, anahtarlar\u305? alma, kodu GitHub'a y\f1\'fckleme, Render'\f0\u305? yap\u305?land\u305?rma) takip edersiniz.\par
      * **\u304?zleme:** Render loglar\u305?n\u305? (`patch-scraper` ve `patch-health-check` i\f1\'e7in) ve Slack'teki `#gpnai-alerts` kanal\f0\u305?n\u305? d\f1\'fczenli olarak kontrol edersiniz. `/health` endpoint'ini bir uptime monit\'f6r\'fcne eklersiniz.\par
      * **Bak\f0\u305?m:** Bir scraper bozuldu\u287?unda (Slack uyar\u305?s\u305? gelince), `scrapers.py` dosyas\u305?n\u305? g\f1\'fcnceller ve GitHub'a g\'f6nderirsiniz. Yeni bir oyun eklemek i\'e7in `sources.yaml` ve `scrapers.py` dosyalar\f0\u305?n\u305? g\f1\'fcnceller ve GitHub'a g\'f6nderirsiniz.\par
      * **Y\'f6netim:** API anahtarlar\f0\u305?n\u305? (Gemini, R2, Slack, Kendi API Anahtar\u305?n\u305?z) y\f1\'f6netirsiniz. M\'fc\f0\'baterilere da\u287?\u305?t\u305?lacak `API_KEY`'i olu\'baturur ve g\f1\'fcvenli bir \f0\'baekilde iletirsiniz.\par
\par
  * **API Kullan\u305?c\u305?s\u305? (M\f1\'fc\f0\'bateri) Olarak:**\par
\par
      * **Eri\'baim:** Size sa\u287?lanan `API_KEY`'i al\u305?rs\u305?n\u305?z.\par
      * **Kullan\u305?m:** \u304?stedi\u287?iniz oyunun verisini almak i\f1\'e7in API endpoint'ine bir GET iste\f0\u287?i yapars\u305?n\u305?z. Bu iste\u287?in ba\'bal\u305?\u287?\u305?na (`Header`) `X-API-Key` olarak size verilen anahtar\u305? eklemelisiniz.\par
          * \f1\'d6rnek \f0\u304?stek (Python `requests` ile):\par
            ```python\par
            import requests\par
            import os\par
\par
            API_ENDPOINT = "{{\field{\*\fldinst{HYPERLINK https://game-patch-api.onrender.com/patches }}{\fldrslt{https://game-patch-api.onrender.com/patches\ul0\cf0}}}}\f0\fs22 "\par
            API_KEY = "sk-gpnai-..." # Size verilen anahtar\par
\par
            headers = \{"X-API-Key": API_KEY\}\par
            params = \{"game": "Valorant"\}\par
\par
            response = requests.get(API_ENDPOINT, headers=headers, params=params)\par
\par
            if response.status_code == 200:\par
                data = response.json()\par
                print(json.dumps(data, indent=2, ensure_ascii=False))\par
            else:\par
                print(f"Hata: \{response.status_code\} - \{response.text\}")\par
            ```\par
      * **Yorumlama:** D\f1\'f6nen JSON verisini kendi uygulaman\f0\u305?zda (web sitesi, bot, analiz arac\u305?) i\'balersiniz. `changes` dizisinin bo\'ba olabilece\u287?ini g\f1\'f6z \'f6n\'fcnde bulundurursunuz.\par
      * **Sa\f0\u287?l\u305?k Kontrol\f1\'fc:** \f0\u304?ste\u287?e ba\u287?l\u305? olarak, API'nin genel durumunu kontrol etmek i\f1\'e7in `/health` endpoint'ini \'e7a\f0\u287?\u305?rabilirsiniz (bu endpoint API anahtar\u305? gerektirmez).\par
\par
-----\par
\par
### **9. Bak\u305?m ve Sorun Giderme**\par
\par
  * **Scraper Bozulmas\u305?:** En s\u305?k kar\'ba\u305?la\'ba\u305?lacak sorundur. `patch-health-check` Slack uyar\u305?s\u305? verdi\u287?inde veya `patch-scraper` loglar\u305?nda bir oyun i\f1\'e7in s\'fcrekli `None` d\'f6nd\'fc\f0\u287?\f1\'fcn\'fc g\'f6rd\'fc\f0\u287?\f1\'fcn\'fczde, ilgili oyunun web sitesini kontrol edin. HTML yap\f0\u305?s\u305? de\u287?i\'bami\'base, `scrapers.py` dosyas\u305?ndaki ilgili `fetch_*` fonksiyonunu g\f1\'fcncelleyin ve GitHub'a g\'f6nderin.\par
  * **API Hatalar\f0\u305? (Gemini/R2):** Slack uyar\u305?s\u305? geldi\u287?inde, hatan\u305?n kayna\u287?\u305?n\u305? (Gemini kotas\u305?, R2 eri\'baim sorunu vb.) loglardan tespit edin ve ilgili platformun (Google AI Studio, Cloudflare) ayarlar\u305?n\u305? kontrol edin. Gerekirse API anahtarlar\u305?n\u305? yenileyin ve Render ortam de\u287?i\'bakenlerini g\f1\'fcncelleyin.\par
  * **API Yan\f0\u305?t Vermiyor:** `/health` endpoint'i yan\u305?t vermiyorsa, Render'daki `game-patch-api` (Web) servisinin loglar\u305?n\u305? kontrol edin. \f1\'c7\'f6kme varsa, nedeni ara\f0\'bat\u305?r\u305?n (`main.py` hatas\u305?, ba\u287?\u305?ml\u305?l\u305?k sorunu vb.).\par
\par
-----\par
\par
### **10. Gelecek Vizyonu ve Potansiyel Geli\'batirmeler**\par
\par
Bu k\u305?lavuzda detayland\u305?r\u305?lan Faz 1, 2 ve 3 g\f1\'fcncellemeleri, sa\f0\u287?lam bir temel olu\'baturmu\'batur. Gelecekte sistem, a\'baa\u287?\u305?daki y\f1\'f6nlerde daha da geli\f0\'batirilebilir:\par
\par
  * **Daha Ak\u305?ll\u305? Analiz:** Ge\f1\'e7mi\f0\'ba verileri (R2 versiyonlama sayesinde) kullanarak trend analizi yapma, de\u287?i\'baikliklerin \f1\'f6nemini puanlama ("impact score").\par
  * **Kendini \f0\u304?yile\'batiren Promptlar:** AI \f1\'e7\f0\u305?kt\u305?lar\u305?n\u305?n kalitesini otomatik olarak analiz edip `utils.py` i\f1\'e7indeki prompt'u optimize eden bir mekanizma.\par
  * **Veritaban\f0\u305? Entegrasyonu:** R2 yerine PostgreSQL gibi bir veritaban\u305? kullanarak daha karma\'ba\u305?k sorgular ve analizler yapma yetene\u287?i.\par
  * **Geni\'baletilmi\'ba Kapsam:** Desteklenen oyun say\u305?s\u305?n\u305? `sources.yaml` \f1\'fczerinden art\f0\u305?rma, hatta oyun d\u305?\'ba\u305? veri kaynaklar\u305?n\u305? (\f1\'f6rn: e-spor turnuva sonu\'e7lar\f0\u305?) ekleme.\par
  * **Kullan\u305?c\u305? Aray\f1\'fczleri:** API'yi kullanan \'f6rnek bir web aray\'fcz\'fc, Discord botu veya mobil uygulama geli\f0\'batirme.\par
\par
Bu k\u305?lavuz, GPNAI sisteminin mevcut mimarisini, i\'baleyi\'baini ve kullan\u305?m\u305?n\u305? kapsaml\u305? bir \'baekilde a\f1\'e7\f0\u305?klamaktad\u305?r.\f1\lang31\par
}
 